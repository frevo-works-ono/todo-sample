# ===================================================================
# APPLICATION PROPERTIES
# ===================================================================

# ----------------------------------------
# CORE PROPERTIES
# ----------------------------------------

# LOGGING
logging.file=logs/app.log
logging.level.root=WARN
logging.level.com.spocle=INFO
logging.level.org.hibernate.SQL=INFO
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=INFO

# THYMELEAF (ThymeleafAutoConfiguration)
spring.thymeleaf.cache=false
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.encoding=UTF-8

# ----------------------------------------
# WEB PROPERTIES
# ----------------------------------------

# EMBEDDED SERVER CONFIGURATION (ServerProperties)
server.port=8081
server.session.timeout=900

# MULTIPART (MultipartProperties)
#multipart.max-file-size=10MB
#multipart.max-request-size=100MB

# JACKSON (JacksonProperties)
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss

# ----------------------------------------
# SECURITY PROPERTIES
# ----------------------------------------
# SECURITY (SecurityProperties)
security.basic.enabled=false

# ----------------------------------------
# DATA PROPERTIES
# ----------------------------------------
# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.driverClassName=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost/test
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:25432/tododb
spring.datasource.username=postgres
spring.datasource.password=postgres

### test and validation for connection
#spring.datasource.test-on-borrow=true
#spring.datasource.validation-query=SELECT 1
### remove connection when abolish
#spring.datasource.remove-abandoned=true
#spring.datasource.remove-abandoned-timeout=30
### Settings of Connection pool
#spring.datasource.max-active=50
#spring.datasource.max-idle=8
#spring.datasource.min-idle=8
#spring.datasource.initial-size=10
## Number of ms to wait before throwing an exception if no connection is available.
#spring.datasource.max-wait=10000

# H2 Web Console (H2ConsoleProperties)
#spring.h2.console.enabled=false # Enable the console.
#spring.h2.console.path=/h2-console # Path at which the console will be available.

# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
#spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true

# LINE BOT
#line.bot.channel-token=vL8BH+3oMJI9q1gV7OjjxbD3IwWNVLbTr56OYWrXHG4d5zMjUUviAbCUSnIw11FDATuXJ2E/BWDKXLng2WU4Bzfjh+gBvbuOrZdwLMD5+EtxrR38MqDEmGqrRYy0/RhUkoKGp4cs5Q2FRR/0e6WJzAdB04t89/1O/w1cDnyilFU=
#line.bot.channel-secret=6be3ba032ddb05ef30066bedd3818484

# spring session
#spring.session.hazelcast.map-name=spring:session:sessions # Name of the map used to store sessions.
#spring.session.jdbc.initializer.enabled=true # Create the required session tables on startup if necessary.
#spring.session.jdbc.schema=classpath:org/springframework/session/jdbc/schema-@@platform@@.sql # Path to the SQL file to use to initialize the database schema.
#spring.session.jdbc.table-name=SPRING_SESSION # Name of database table used to store sessions.
#spring.session.mongo.collection-name=sessions # Collection name used to store sessions.
#spring.session.redis.flush-mode= # Flush mode for the Redis sessions.
#spring.session.redis.namespace= # Namespace for keys used to store sessions.
#spring.session.store-type=none # Session store type.

# spring data redis
#spring.redis.cluster.max-redirects= # Maximum number of redirects to follow when executing commands across the cluster.
#spring.redis.cluster.nodes= # Comma-separated list of "host:port" pairs to bootstrap from.
#spring.redis.database=0 # Database index used by the connection factory.
spring.redis.host=localhost
#spring.redis.password= # Login password of the redis server.
#spring.redis.pool.max-active=8 # Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
#spring.redis.pool.max-idle=8 # Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
#spring.redis.pool.max-wait=-1 # Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
#spring.redis.pool.min-idle=0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
spring.redis.port=6379
#spring.redis.sentinel.master= # Name of Redis server.
#spring.redis.sentinel.nodes= # Comma-separated list of host:port pairs.
#spring.redis.timeout=0 # Connection timeout in milliseconds.

server.session.cookie.http-only=false
server.session.cookie.secure=false
server.session.cookie.path=/